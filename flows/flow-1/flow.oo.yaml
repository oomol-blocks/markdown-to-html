nodes:
  - node_id: markdown-to-html#1
    task: self::markdown-to-html
    inputs_from:
      - handle: wrapWithHtml
        value: true
      - handle: defaultStyle
        value: false
      - handle: markdownText
        value: >-
          # Main Title (H1)


          ## Secondary Title (H2)


          ### Subsection (H3)


          #### Sub-subsection (H4)


          ##### Minor Heading (H5)


          ###### Smallest Heading (H6)


          ---


          ## Text Formatting


          This is a paragraph with **bold text** and *italic text*. You can also use __alternative bold__ and _alternative italic_.


          Here's some ~~strikethrough text~~ and `inline code`.


          Multiple formatting can be combined: ***bold and italic*** text.


          ---


          ## Lists


          ### Unordered List

          - First item

          - Second item
            - Nested item
            - Another nested item
          - Third item


          ### Ordered List

          1. First numbered item

          2. Second numbered item

          3. Third numbered item


          ### Mixed List Example

          * Item one

          * Item two

          + Item three

          - Item four


          ---


          ## Code Blocks


          Inline code: `console.log('Hello World')`


          Code block without language:

          ```

          function hello() {
              return "Hello World";
          }

          ```


          Code block with language specification:

          ```javascript

          const greeting = (name) => {
              console.log(`Hello, ${name}!`);
              return `Welcome, ${name}`;
          };


          greeting('Developer');

          ```


          ```python

          def fibonacci(n):
              if n <= 1:
                  return n
              return fibonacci(n-1) + fibonacci(n-2)

          print(fibonacci(10))

          ```


          ---


          ## Links and Images


          ### Links

          - Simple link: [Google](https://www.google.com)

          - Link with title: [GitHub](https://github.com "GitHub Homepage")

          - Reference link: [Example Reference][1]


          [1]: https://example.com "Example Website"


          ### Images

          - Simple image: ![Alt text](https://via.placeholder.com/150)

          - Image with title: ![Sample Image](https://via.placeholder.com/300x200 "Sample Placeholder Image")


          ---


          ## Blockquotes


          > This is a simple blockquote.


          > This is a longer blockquote that spans multiple lines.

          > It continues here and demonstrates how blockquotes work

          > in markdown formatting.


          > **Note:** Blockquotes can contain other formatting like **bold** and *italic* text.


          ---


          ## Tables


          ### Simple Table

          | Name | Age | City |

          |------|-----|------|

          | John | 25 | New York |

          | Jane | 30 | London |

          | Bob | 35 | Tokyo |


          ### Table with Alignment

          | Left Aligned | Center Aligned | Right Aligned |

          |:-------------|:--------------:|--------------:|

          | Left | Center | Right |

          | Text | Text | Text |

          | More | Content | Here |


          ### Complex Table

          | Feature | Supported | Notes |

          |---------|:---------:|-------|

          | Headers | ✅ | H1-H6 supported |

          | Lists | ✅ | Ordered and unordered |

          | Code | ✅ | Inline and blocks |

          | Tables | ✅ | With alignment |

          | Images | ✅ | With alt text |


          ---


          ## Horizontal Rules


          Three ways to create horizontal rules:


          ---


          ***


          ---


          ## Mixed Content Example


          Here's a paragraph that contains **bold text**, *italic text*, `inline code`, and a [link to example](https://example.com).


          ### Code Example with Explanation


          The following JavaScript function demonstrates array manipulation:


          ```javascript

          const numbers = [1, 2, 3, 4, 5];

          const doubled = numbers.map(n => n * 2);

          console.log(doubled); // [2, 4, 6, 8, 10]

          ```


          > **Tip:** The `map()` function creates a new array with the results of calling a function for every array element.


          ### Task List (if supported)

          - [x] Create markdown parser

          - [x] Add code block support

          - [ ] Add emoji support

          - [ ] Add math formula support


          ---


          ## Final Notes


          This markdown document tests:

          1. **Headers** at all levels

          2. **Text formatting** (bold, italic, strikethrough)

          3. **Lists** (ordered, unordered, nested)

          4. **Code blocks** with and without syntax highlighting

          5. **Links** and **images**

          6. **Blockquotes**

          7. **Tables** with different alignments

          8. **Horizontal rules**

          9. **Mixed content** combinations


          The parser should handle all these elements correctly and convert them to proper HTML output.
